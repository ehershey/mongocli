before:
  hooks:
    - go mod tidy

builds:
  - <<: &build_defaults
      env:
        - CGO_ENABLED=0
      binary: bin/mongocli
      main: ./cmd/mongocli/mongocli.go
      ldflags:
        - -s -w -X github.com/mongodb/mongocli/internal/version.Version={{.Version}} -X github.com/mongodb/mongocli/internal/version.GitCommit={{.FullCommit}}
    id: macos
    goos: [darwin]
    goarch: [amd64,arm64]
    hooks:
      # This will notirize Apple binaries and replace goreleaser bins with the notarized ones
      post: ./build/package/mac_notarize.sh
  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: [amd64,arm64]
  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [amd64]
archives:
- id: linux
  builds: [linux]
  <<: &archive_defaults
    files:
      - README.md
      - LICENSE
      - third_party_notices/**/*
    replacements:
      darwin: macos
      amd64: x86_64
  wrap_in_directory: true
  format: tar.gz
- id: macos
  builds: [macos]
  <<: *archive_defaults
  format: zip
  wrap_in_directory: false
- id: windows
  builds: [windows]
  <<: *archive_defaults
  wrap_in_directory: false
  format: zip
brews:
- name: mongocli
  ids: [macos,linux]
  tap:
    owner: mongodb
    name: homebrew-brew
  folder: Formula
  skip_upload: auto
  description: MongoDB Command Line Interface (mongocli) is a tool for managing your MongoDB cloud services, like MongoDB Atlas, MongoDB Cloud Manager, and MongoDB Ops Manager.
  homepage: https://github.com/mongodb/mongocli
  license: Apache-2.0
  install: |
    bin.install "bin/mongocli"
    (bash_completion/"mongocli.sh").write `#{bin}/mongocli completion bash`
    (zsh_completion/"_mongocli").write `#{bin}/mongocli completion zsh`
    (fish_completion/"mongocli.fish").write `#{bin}/mongocli completion fish`
  test: |
    system "#{bin}/mongocli --version"
nfpms:
- package_name: mongocli
  vendor: MongoDB Inc.
  homepage: https://www.mongodb.com/
  maintainer: MongoDB Inc. <support@mongodb.com>
  description: MongoDB Command Line Interface (mongocli) is a tool for managing your MongoDB cloud services, like MongoDB Atlas, MongoDB Cloud Manager, and MongoDB Ops Manager.
  license: Apache 2.0
  bindir: /usr
  builds: [linux]
  formats: [deb,rpm]
  replacements:
    amd64: x86_64
checksum:
  name_template: checksums.txt
snapshot:
  name_template: next
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - '^task:'
    - '^build(deps):'

signs:
  - id: targz
    signature: "${artifact}.sig"
    cmd: /usr/local/bin/notary-client.py
    # command line templateable arguments for the command
    #
    # to sign with a specific key use
    # args: ["-u", "<key id, fingerprint, email, ...>", "--output", "${signature}", "--detach-sign", "${artifact}"]
    #
    # defaults to `["--output", "${signature}", "--detach-sign", "${artifact}"]`
    args: ["--key-name", "server-4.4", "--auth-token-file", "./signing_auth_token", "--comment", "Evergreen Automatic Signing (mongocli)", "--notary-url", "http://notary-service.build.10gen.cc:5000", "--skip-missing", "--package-file-suffix", "", "--outputs", "sig", "${artifact}"]
    # which artifacts to sign
    #
    #   checksum: only checksum file(s)
    #   all:      all artifacts
    #   none:     no signing
    #   source:   source archive
    #
    # defaults to `none`
    artifacts: all

    # IDs of the artifacts to sign.
    # Defaults to all.
    # If `artifacts` is checksum or source, this fields has no effect.
    ids:
      - linux
release:
  prerelease: auto
  name_template: "MongoDB CLI {{.Version}}"
  extra_files:
    - glob: ./bin/*.msi
    - glob: ./dist/*.sig
